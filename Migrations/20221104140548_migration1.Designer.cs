// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetC_Assessment___Coding_exercise.Models;

#nullable disable

namespace NetC_Assessment___Coding_exercise.Migrations
{
    [DbContext(typeof(benjaminGarridoDatabaseContext))]
    [Migration("20221104140548_migration1")]
    partial class migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NetC_Assessment___Coding_exercise.Models.Claim", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("VehicleId")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Vehicle_Id");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("NetC_Assessment___Coding_exercise.Models.Owner", b =>
                {
                    b.Property<bool?>("DriverLicense")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("ntext");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id");

                    b.Property<string>("LastNme")
                        .HasColumnType("ntext");

                    b.ToTable("Owner", (string)null);
                });

            modelBuilder.Entity("NetC_Assessment___Coding_exercise.Models.Vehicle", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("OwnerId")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Owner_Id");

                    b.Property<string>("Vin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("NetC_Assessment___Coding_exercise.Models.Claim", b =>
                {
                    b.HasOne("NetC_Assessment___Coding_exercise.Models.Vehicle", "Vehicle")
                        .WithMany("Claims")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("Vehicle_Id");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("NetC_Assessment___Coding_exercise.Models.Vehicle", b =>
                {
                    b.HasOne("NetC_Assessment___Coding_exercise.Models.Vehicle", "Owner")
                        .WithMany("InverseOwner")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("Owner_Id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("NetC_Assessment___Coding_exercise.Models.Vehicle", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("InverseOwner");
                });
#pragma warning restore 612, 618
        }
    }
}
